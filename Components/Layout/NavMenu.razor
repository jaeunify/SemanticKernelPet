@implements IDisposable
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject PetStorageService PetStorageService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SemanticKernelPet</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @foreach(var petName in petNames)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@($"/pet/{petName}")">
                    <span class="bi bi-paw-fill" aria-hidden="true"></span> @petName
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {

    private List<string> petNames = new ();

    protected override void OnInitialized()
    {
        petNames = PetStorageService.GetAllPetNames();
        PetStorageService.OnChange += UpdatePetList;
    }

    private void UpdatePetList()
    {
        petNames = PetStorageService.GetAllPetNames();
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        PetStorageService.OnChange -= UpdatePetList;
    }
}

