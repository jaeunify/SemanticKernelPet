@page "/pet/{PetName}"
@using Microsoft.AspNetCore.Components
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject PetChatService ChatService
@inject PetStorageService PetStorageService

<div
    style="display: flex; flex-direction: column; justify-content: center; align-items: center; min-height: 100vh; text-align: center;">
    @if (errorCode == ErrorCode.PetNotFound) {
        // Navigation.NavigateTo($"/Error");
        <Error/>
    }
    else
    {

        @if (!string.IsNullOrWhiteSpace(generatedImageUrl))
        {
            <div class="mt-4">
                <img src="@generatedImageUrl" alt="Generated Pet Image" class="img-fluid rounded"
                    style="max-width: 512px; max-height: 512px;" />
            </div>
        }

        <hr class="w-50" />

        <h3>Chat with your Pet, @PetName</h3>
        <div class="d-flex justify-content-center w-100 mb-2">
            <input @bind="input" @onkeyup="Enter" class="w-50" placeholder="메시지" />
            <button @onclick="Send" class="btn btn-primary">Send</button>
        </div>

        <ul style="list-style-type: none; padding: 0;">
            @foreach (var m in ChatService.GetHistory())
            {
                <li><b>@m.Role</b>: @m.Content</li>
            }
        </ul>
    }
</div>

@code {
    [Parameter]
    public string? PetName { get; set; }

    private string? input = "처음뵙겠습니다.. 펫님";
    private string? generatedImageUrl;
    private ErrorCode errorCode = ErrorCode.OK;

    protected override void OnInitialized()
    {
        if (string.IsNullOrWhiteSpace(PetName))
        {
            errorCode = ErrorCode.PetNotFound;
            return;
        }

        var Pet = PetStorageService.GetPet(PetName);
        if (Pet == null)
        {
            errorCode = ErrorCode.PetNotFound;
            return;
        }

        generatedImageUrl = Pet.PetImageUrl;
    }

    private async Task Send()
    {
        if (!string.IsNullOrWhiteSpace(input))
        {
            await ChatService.SendAsync(input);
            input = string.Empty;
        }
    }

    public async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await Send();
        }
    }
}
