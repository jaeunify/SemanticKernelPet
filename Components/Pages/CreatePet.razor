@page "/create-pet"
@using SemanticKernelService
@rendermode InteractiveServer
@inject TextToImageService ImageService

<h3>나만의 펫 만들기 (Create Your Own Pet)</h3>

<p>원하는 펫을 자세히 묘사해주세요. 생성된 펫은 홈 화면에 나타납니다.</p>
<textarea @bind="petDescription" placeholder="예: 꽃밭에서 놀고 있는 솜털같은 골든 리트리버 강아지" rows="4" style="width: 100%;"></textarea>
<button class="btn btn-primary" @onclick="GeneratePetImage" disabled="@isGenerating">
    @if (isGenerating)
    {
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        <span>만드는 중...</span>
    }
    else
    {
        <span>만나기 (Meet)</span>
    }
</button>

@if (!string.IsNullOrWhiteSpace(generatedImageUrl))
{
    <div class="mt-4">
        <h4>새로운 펫! (Your New Pet!)</h4>
        <img src="@generatedImageUrl" alt="Generated Pet Image" class="img-fluid rounded" style="max-width: 512px; max-height: 512px;" />
    </div>
}

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger mt-4" role="alert">
        @errorMessage
    </div>
}


@code {
    private string? petDescription;
    private string? generatedImageUrl;
    private bool isGenerating = false;
    private string? errorMessage;

    private async Task GeneratePetImage()
    {
        if (string.IsNullOrWhiteSpace(petDescription))
        {
            errorMessage = "펫에 대한 묘사를 입력해주세요.";
            return;
        }

        isGenerating = true;
        generatedImageUrl = null;
        errorMessage = null;

        try
        {
            generatedImageUrl = await ImageService.GenerateImageAsync(petDescription);
        }
        catch
        {
            // In a real app, log this exception
            errorMessage = "이미지 생성에 실패했습니다. 잠시 후 다시 시도해주세요.";
        }
        finally
        {
            isGenerating = false;
        }
    }
}
